cscope 15 $HOME/work/github/bitelp -q 0000000157 0000008966
	@boot/boot.s

2 
MBOOT_HEADER_MAGIC
 
	gequ
 0x1BADB002

3 
MBOOT_PAGE_ALIGN
 
	gequ
 1 << 0

4 
MBOOT_MEM_INFO
 
	gequ
 1 << 1

5 
MBOOT_HEADER_FLAGS
 
equ
 
	gMBOOT_PAGE_ALIGN
 | 
MBOOT_MEM_INFO


6 
MBOOT_CHECKSUM
 
	gequ
 -(
	gMBOOT_HEADER_MAGIC
+
	gMBOOT_HEADER_FLAGS
)

8 ; Á¨¶Âêà
	gMu…iboŸ
ËßÑËåÉÁöÑ 
	gOS
 Êò†Ë±°ÈúÄË¶ÅËøôÊ†∑‰∏Ä‰∏™ 
magic
 Multiboot Â§¥

9 ; 
	gMu…iboŸ
 Â§¥ÁöÑÂàÜÂ∏ÉÂøÖÈ°ªÂ¶Ç‰∏ãË°®ÊâÄÁ§∫Ôºö

13 ; 0 
u32
 
	gmagic
 ÂøÖÈúÄ

14 ; 4 
u32
 
	gÊags
 ÂøÖÈúÄ

15 ; 8 
u32
 
	gchecksum
 ÂøÖÈúÄ

17 ; Êàë‰ª¨Âè™‰ΩøÁî®Âà∞Ëøô‰∫õÂ∞±Â§ü‰∫ÜÔºåÊõ¥Â§öÁöÑËØ¶ÁªÜËØ¥ÊòéËØ∑ÂèÇÈòÖ 
	gGNU
 Áõ∏ÂÖ≥ÊñáÊ°£

22 [
BITS
 32] ; ÊâÄÊúâ‰ª£Á†Å‰ª• 32-
	gbô
 ÁöÑÊñπÂºèÁºñËØë

23 
	g£˘i⁄
 .
	gãxt
 ; ‰ª£Á†ÅÊÆµ‰ªéËøôÈáåÂºÄÂßã

25 
dd
 
	gMBOOT_HEADER_MAGIC
 ; 
	gGRUB
 ‰ºöÈÄöËøáËøô‰∏™È≠îÊï∞Âà§Êñ≠ËØ•Êò†ÂÉèÊòØÂê¶ÊîØÊåÅ

26 
dd
 
	gMBOOT_HEADER_FLAGS
 ; 
	gGRUB
 ÁöÑ‰∏Ä‰∫õÂä†ËΩΩÊó∂ÈÄâÈ°πÔºåÂÖ∂ËØ¶ÁªÜÊ≥®ÈáäÂú®ÂÆö‰πâÂ§Ñ

27 
dd
 
	gMBOOT_CHECKSUM
 ; Ê£ÄÊµãÊï∞ÂÄºÔºåÂÖ∂Âê´‰πâÂú®ÂÆö‰πâÂ§Ñ

29 [
GLOBAL
 
°¨t
] ; ÂêëÂ§ñÈÉ®Â£∞ÊòéÂÜÖÊ†∏‰ª£Á†ÅÂÖ•Âè£ÔºåÊ≠§Â§ÑÊèê‰æõËØ•Â£∞ÊòéÁªôÈìæÊé•Âô®

30 [
GLOBAL
 
glb_mboŸ_±r
] ; ÂêëÂ§ñÈÉ®Â£∞Êòé 
	gmu…iboŸ
 * ÂèòÈáè

31 [
EXTERN
 
kîn_íåy
] ; Â£∞ÊòéÂÜÖÊ†∏ 
	gC
 ‰ª£Á†ÅÁöÑÂÖ•Âè£ÂáΩÊï∞

33 
	g°¨t
:

34 
˛i


35 
mov
 
e•
,
STACK_TOP


36 
mov
 
	gebp
,0

37 
™d
 
	ge•
,0fffffff0
h


38 
	gmov
 [
glb_mboŸ_±r
],
ebx


39 
ˇŒ
 
kîn_íåy


40 
	g°›
:

41 
h…


42 
jmp
 
°›


44 
£˘i⁄
 .
bss


45 
°ack
:

46 
ªsb
 32768

47 
glb_mboŸ_±r
:

48 
ªsb
 4

50 
STACK_TOP
 
equ
 
$
-
°ack
-1

	@include/asm.c

1 
	~"asm.h
"

3 
ölöe
 
	$outb
(
uöt16_t
 
p‹t
,
uöt8_t
 
vÆue
) {

4 
asm
 volatile("outb %0,%1\n\t"

6 :"a"(
vÆue
),"dN"(
p‹t
));

7 
	}
}

9 
ölöe
 
	$outw
(
uöt16_t
 
p‹t
, uöt16_à
vÆue
) {

10 
asm
 volatile("outw %0,%1\n\t"

12 :"a"(
vÆue
),"dN"(
p‹t
));

13 
	}
}

15 
ölöe
 
uöt8_t
 
	$öb
(
uöt16_t
 
p‹t
) {

16 
uöt8_t
 
vÆue
;

17 
asm
 volatile("inb %1,%0\n\t"

18 :"˜"(
vÆue
)

19 :"dN"(
p‹t
));

20  
vÆue
;

21 
	}
}

23 
ölöe
 
uöt16_t
 
	$öw
(
uöt16_t
 
p‹t
) {

24 
uöt16_t
 
vÆue
;

25 
asm
 volatile("inw %1,%0\n\t"

26 :"˜"(
vÆue
)

27 :"dN"(
p‹t
));

28  
vÆue
;

29 
	}
}

	@include/asm.h

1 #i‚de‡
_ASM_H


2 
	#_ASM_H


	)

3 
	~"ty≥s.h
"

5 
outb
(
uöt16_t
 
p‹t
,
uöt8_t
 
vÆue
);

7 
outw
(
uöt16_t
 
p‹t
,uöt16_à
vÆue
);

9 
uöt8_t
 
öb
(
uöt16_t
 
p‹t
);

11 
uöt16_t
 
öw
(uöt16_à
p‹t
);

	@include/debug.h

1 #i‚de‡
_DEBUG_H


2 
	#_DEBUG_H


	)

4 
	~"v¨gs.h
"

5 
	~"ty≥s.h
"

6 
	~"°rög.h
"

7 
	~"vga.h
"

9 
	#as£π
(
x
) \

11 i‡(!
x
) { \

12 
	`¥ötk
("As£πi⁄ faûed: %†fûê%s,Üöê%d\n", \

	)

13 #x,
__FILE__
,
__LINE__
); \

17 
¥ötk
(c⁄° *
f‹m©
, ...);

	@include/string.c

1 
	~"°rög.h
"

3 
ölöe
 *
	$mem˝y
(*
de°
, c⁄° *
§c
, 
uöt32_t
 
Àn
) {

4 *
tmp
 = 
de°
;

5 c⁄° *
s
 = 
§c
;

6 
Àn
--)

7 *
tmp
++ = *
s
++;

8  
de°
;

9 
	}
}

11 
ölöe
 
	$mem£t
(*
§c
, 
uöt8_t
 
vÆ
, 
uöt32_t
 
Àn
) {

12 *
tmp
 = 
§c
;

13 
Àn
--) {

14 *
tmp
++ = 
vÆ
;

16 
	}
}

18 
ölöe
 *
	$°r˝y
(*
de°
, c⁄° *
§c
) {

19 *
tmp
 = 
de°
;

20 (*
de°
++ = *
§c
++) != '\0')

22  
tmp
;

23 
	}
}

25 
ölöe
 
	$°æí
(c⁄° *
°r
) {

26 
Àn
 = 0;

27 *
°r
++)

28 
Àn
++;

29  
Àn
;

30 
	}
}

32 
ölöe
 
	$°rcmp
(c⁄° *
°r1
, c⁄° *
°r2
) {

33 
ªs
 = 0;

34 
c1
,
c2
;

36 
c1
 = *
°r1
++;

37 
c2
 = *
°r2
++;

38 if(
c1
 !
c2
)

39  
c1
 < 
c2
 ? -1 : 1;

40 if(!
c1
)

44 
	}
}

	@include/string.h

1 #i‚de‡
STRING_H


2 
	#STRING_H


	)

4 
	~"ty≥s.h
"

6 *
mem˝y
(*
de°
, c⁄° *
§c
, 
uöt32_t
 
Àn
);

7 
mem£t
(*
de°
, 
uöt8_t
 
vÆ
, 
uöt32_t
 
Àn
);

9 *
°r˝y
(*
de°
, c⁄° *
§c
);

10 
°æí
(c⁄° *
§c
);

11 
°rcmp
(c⁄° *
°r1
, c⁄° *
°r2
);

	@include/test.h

1 #i‚de‡
_TEST_H


2 
	#_TEST_H


	)

4 
	~"°rög.h
"

5 
	~"ty≥s.h
"

6 
	~"vga.h
"

7 
	~"debug.h
"

9 
°rög_ã°
();

10 
¥ötk_ã°
();

	@include/types.h

1 #i‚de‡
_TYPES_H_


2 
	#_TYPES_H_


	)

4 #i‚de‡
NULL


5 
	#NULL
 0

	)

8 #i‚de‡
TRUE


9 
	#TRUE
 1

	)

10 
	#FALSE
 0

	)

13 
	tuöt32_t
;

14 
	tuöt16_t
;

15 
	tuöt8_t
;

	@include/vargs.h

1 #i‚de‡
_VARGS_H_


2 
	#_VARGS_H_


	)

5 
__buûtö_va_li°
 
	tva_li°
;

7 
	#va_°¨t
(
≠
, 
œ°
Ë(
	`__buûtö_va_°¨t
◊p,Üa°))

	)

8 
	#va_¨g
(
≠
, 
ty≥
Ë(
	`__buûtö_va_¨g
◊p,Åy≥))

	)

9 
	#va_íd
(
≠
Ë(
	`__buûtö_va_íd
◊p))

	)

13 * 
	tva_li°
;

14 
	#_INTSIZEOF
(
n
Ë((“Ë+ (Ë- 1Ë& ~((Ë- 1))

	)

16 
	#va_°¨t
(
≠
,
v
Ë◊∞(
va_li°
)&v + 
	`_INTSIZEOF
(v))

	)

17 
	#va_¨g
(
≠
,
t
Ë(*—*)(◊∞+
	`_INTSIZEOF
—)Ë- _INTSIZEOF—)))

	)

18 
	#va_íd
(
≠
Ë–≠ = (
va_li°
)0)

	)

	@include/vga.c

1 
	~"vga.h
"

2 
	~"ty≥s.h
"

3 
	~"asm.h
"

4 
uöt16_t
 *
	gvga_pos
 = (uint16_t *)0xb8000;

5 
uöt8_t
 
	gcurs‹_x
 = 24;

6 
uöt8_t
 
	gcurs‹_y
 = 10;

9 
	$move_curs‹
() {

11 
uöt16_t
 
curs‹_loˇti⁄
 = 
curs‹_y
 * 80 + 
curs‹_x
;

12 
	`outb
(
vga_i
, 
curs‹_hi
);

13 
	`outb
(
vga_o
, 
curs‹_loˇti⁄
 >> 8);

14 
	`outb
(
vga_i
, 
curs‹_lo
);

15 
	`outb
(
vga_o
, 
curs‹_loˇti⁄
);

16 
	}
}

18 
	$s¸ìn_˛ór
() {

19 
i
;

20 
cﬁ‹_t
 
whôe
 = 
h_whôe
;

21 
uöt16_t
 
bœnk
 = 0x20 | ( 
whôe
 << 8);

22 
i
 = 0; i < 
curs‹_y
 * 80 + 
curs‹_x
; i++) {

23 
vga_pos
[
i
] = 
bœnk
;

25 
curs‹_x
 = 0;

26 
curs‹_y
 = 0;

27 
	`move_curs‹
();

28 
	}
}

30 
	$s¸ﬁl
() {

31 
i
;

32 
uöt8_t
 
cﬁ‹
 = (uöt8_t)
cﬁ‹_bœck
;

33 
uöt16_t
 
bœnk
 = 0x20 | (
cﬁ‹
 << 8);

34 i‡(
curs‹_y
 >= 25) {

35 
i
 = 0; i < 24 * 80; i++) {

36 
vga_pos
[
i
] = vga_pos[i + 80];

38 
i
 = 24 * 80; i< 25 * 80; i++) {

39 
vga_pos
[
i
] = 
bœnk
;

41 
curs‹_y
 = 24;

43 
	}
}

45 
	$putch
(
c
) {

46 
cﬁ‹_t
 
whôe
 = 
h_whôe
;

47 if(
c
 == 0x08) {

48 
vga_pos
[
curs‹_x
 + 
curs‹_y
 * 80] = 
cﬁ‹_bœck
;

49 
curs‹_x
--;

51 if(
c
 == 0x09) {

52 
curs‹_x
 = (cursor_x + 8) & 0x1000;

54 if(
c
 == '\r') {

55 
curs‹_x
 = 0;

57 if(
c
 == '\n') {

58 
curs‹_x
 = 0;

59 
curs‹_y
++;

61 if(
c
 == 0x7f) {

62 
vga_pos
[
curs‹_x
 + 
curs‹_y
 * 80] = 
cﬁ‹_bœck
;

63 
curs‹_x
--;

65 if(
c
 >= ' ') {

66 
vga_pos
[
curs‹_x
 + 
curs‹_y
 * 80] = 
c
 | (
whôe
 << 8);

67 
curs‹_x
++;

69 
	`s¸ﬁl
();

70 
	`move_curs‹
();

71 
	}
}

73 
	$puéöe
(*
±r
) {

74 *
±r
) {

75 
	`putch
(*
±r
++);

77 
	}
}

79 
	$misc_öô
() {

80 
uöt8_t
 
vÆ
;

81 
vÆ
 = 
	`öb
(
misc_r
);

82 if(
vÆ
 & (
uöt8_t
)
IOAS
 == 0) {

85 
vÆ
 |= 1;

86 
	`outb
(
misc_w
,
vÆ
);

89 
	}
}

91 
	$vga_öô
() {

92 
	`misc_öô
();

93 
	}
}

	@include/vga.h

1 #i‚de‡
_VGA_H


2 
	#_VGA_H


	)

4 
	#misc_r
 0x3cc

	)

5 
	#misc_w
 0x3c2

	)

7 
	#curs‹_hi
 0x0e

	)

8 
	#curs‹_lo
 0x0f

	)

10 
	#vga_i
 0x3d4

	)

11 
	#vga_o
 0x3d5

	)

13 
	#IOAS
 1

	)

14 
	#cﬁ‹_bœck
 0b10000000

	)

15 
	#cﬁ‹_whôe
 0b10001111

	)

16 
	ecﬁ‹
 {

17 
	mbœck
 = 0,

18 
	mblue
 = 1,

19 
	mgªí
 = 2,

20 
	mcy™
 = 3,

21 
	mªd
 = 4,

22 
	mmagíè
 = 5,

23 
	mbrown
 = 6,

24 
	mwhôe
 = 7,

25 
	mh_whôe
 = 15,

26 } 
	tcﬁ‹_t
;

28 
s¸ìn_˛ór
();

29 
puéöe
();

30 
vga_öô
();

	@init/init.c

1 
	~"vga.h
"

2 
	~"°rög.h
"

3 
	~"ã°.h
"

5 
ã°
();

7 
	$kîn_íåy
()

9 
	`vga_öô
();

10 
	`s¸ìn_˛ór
();

11 
	`puéöe
("Hello world!\nbitelp isÑunning!\n");

12 
	`ã°
();

14 
	}
}

16 
	$ã°
() {

17 
ªs
;

18 
x
 = 0;

19 
	`as£π
(
	`°rög_ã°
());

20 
	`as£π
(
	`¥ötk_ã°
());

22 
	}
}

	@kern/debug/printk.c

1 
	~"debug.h
"

3 
v•rötf
(*
buff
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
);

5 
	$¥ötk
(c⁄° *
f‹m©
, ...)

7 
buff
[1024];

8 
va_li°
 
¨gs
;

9 
i
;

10 
	`va_°¨t
(
¨gs
,
f‹m©
);

11 
i
 = 
	`v•rötf
(
buff
, 
f‹m©
, 
¨gs
);

12 
	`va_íd
(
¨gs
);

13 
buff
[
i
] = '\0';

14 
	`puéöe
(
buff
);

15 
	}
}

17 
	#do_div
(
n
,
ba£
) ({ \

18 
__ªs
; \

19 
	`__asm__
("div»%4\n\t" :"˜"(
n
),"=d"(
__ªs
Ë:"0"“),"1"(0),"r"(
ba£
)); \

	)

20 
	g__ªs
; })

22 *
	$numbî
(*
°r
, 
num
, 
ba£
)

24 c⁄° *
digôs
 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

25 
tmp
[36];

26 
i
;

27 
i
 = 0;

28 if(
num
 == 0)

29 
tmp
[
i
++] = '0';

31 
num
 != 0)

32 
tmp
[
i
++] = 
digôs
[
	`do_div
(
num
,
ba£
)];

34 
i
-- > 0)

35 *
°r
++ =
tmp
[
i
];

36  
°r
;

37 
	}
}

40 
	$v•rötf
(*
buff
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
)

42 *
s
;

43 *
°r
;

44 
Àn
;

45 
i
;

46 
°r
 = 
buff
; *
f‹m©
; format++) {

47 if(*
f‹m©
 != '%') {

48 *
°r
++ = *
f‹m©
;

51 ++
f‹m©
;

52 *
f‹m©
) {

54 *
°r
++ = (
uöt8_t
Ë
	`va_¨g
(
¨gs
,);

57 
s
 = 
	`va_¨g
(
¨gs
, *);

58 
Àn
 = 
	`°æí
(
s
);

59 
i
 = 0; i < 
Àn
; i++)

60 *
°r
++ = *
s
++;

64 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, 
uöt32_t
), 10);

68 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, 
uöt32_t
), 16);

74 *
°r
 = '\0';

75  ()(
°r
 - 
buff
);

76 
	}
}

	@test/test.c

1 
	~"ã°.h
"

3 
	$°rög_ã°
()

5 *
s1
 = "apple";

6 *
s2
 = "banana";

7 if(
	`°rcmp
(
s1
,
s2
Ë=-1Ë
	`puéöe
("stringÅest is done!\n");

9 
	}
}

11 
	$¥ötk_ã°
()

13 
s
[10] = "abcd";

14 
	`¥ötk
("s[0] i†:%¯s[1] i†:%¯\n",
s
[0],s[1]);

15 
	`¥ötk
("s[0]ásciòi†:%d\n",
s
[0]);

16 
	`¥ötk
("†i†%s\n",
s
);

18 
	}
}

	@
1
.
0
14
209
boot/boot.s
include/asm.c
include/asm.h
include/debug.h
include/string.c
include/string.h
include/test.h
include/types.h
include/vargs.h
include/vga.c
include/vga.h
init/init.c
kern/debug/printk.c
test/test.c
